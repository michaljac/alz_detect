services:
  # Data generation service
  datagen:
    image: alzearly-datagen:v1
    container_name: alzearly-datagen
    volumes:
      - .:/workspace
      - ../Data/alzearly:/Data
    environment:
      - PYTHONUNBUFFERED=1
      - TQDM_DISABLE=1
      - POLARS_NUM_THREADS=1
      - POLARS_STREAMING_COLLECT=0
      - POLARS_FORCE_OPTIMIZED=1
      - POLARS_USE_STREAMING=0
    command: ["python", "run_datagen.py"]
    profiles: [datagen]

  # Training service
  training:
    image: alzearly-train:v1
    container_name: alzearly-train
    volumes:
      - .:/workspace
      - ../Data/alzearly:/Data
    environment:
      - PYTHONUNBUFFERED=1
      - TQDM_DISABLE=1
      - POLARS_NUM_THREADS=1
      - POLARS_STREAMING_COLLECT=0
      - POLARS_FORCE_OPTIMIZED=1
      - WANDB_API_KEY=${WANDB_API_KEY:-}
      - PYTHONPATH=/workspace
    command: ["python", "run_training.py", "--config", "config/model.yaml"]
    profiles: [training]

  # Serving service - FastAPI
  serve:
    image: alzearly-serve:v1
    container_name: alzearly-serve
    network_mode: "host" 
    # ports:
    #   - target: 8001
    #     published: ${SERVE_PORT:-0}   # 0 = auto-pick a free host port; set SERVE_PORT to force a port
    #     protocol: tcp
    volumes:
      - ./artifacts:/workspace/artifacts
      - ./config:/workspace/config
      - ./src:/workspace/src
      - ./run_serve.py:/workspace/run_serve.py
      - ./utils.py:/workspace/utils.py
    environment:
      - PYTHONUNBUFFERED=1
      - PYTHONPATH=/workspace
    working_dir: /workspace
    command: ["--host", "0.0.0.0", "--port", "8001"]
    profiles: [serve]






  # Complete pipeline (training only)
  pipeline:
    image: alzearly-train:v1
    container_name: alzearly-pipeline
    volumes:
      - .:/workspace
      - ../Data/alzearly:/Data
    environment:
      - PYTHONUNBUFFERED=1
      - TQDM_DISABLE=1
      - POLARS_NUM_THREADS=1
      - POLARS_STREAMING_COLLECT=0
      - POLARS_FORCE_OPTIMIZED=1
      - WANDB_API_KEY=${WANDB_API_KEY:-}
      - PYTHONPATH=/workspace
    command: ["python", "run_training.py", "--config", "config/model.yaml"]
    profiles: [pipeline]

  # Pipeline that starts a server from your script
  pipeline-serve:
    image: alzearly-train:v1
    container_name: alzearly-pipeline-serve
    network_mode: "host"
    volumes:
      - .:/workspace
      - ../Data/alzearly:/Data
    environment:
      - PYTHONUNBUFFERED=1
      - PYTHONPATH=/workspace
      - NON_INTERACTIVE=true
    working_dir: /workspace
    command: ["python", "pipeline_with_server.py"]
    profiles: [pipeline-serve]


networks:
  default:
    name: alzearly-network
